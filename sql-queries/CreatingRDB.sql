USE master
--DROP DATABASE ONLINE_SELF_IMPROVEMENT;
CREATE DATABASE ONLINE_SELF_IMPROVEMENT;

USE ONLINE_SELF_IMPROVEMENT;

CREATE TABLE Person (
    ID SMALLINT PRIMARY KEY IDENTITY(1, 1),
    FirstName NVARCHAR(30) NOT NULL,
    LastName NVARCHAR(30) NOT NULL,
    MailAddress VARCHAR(50) NOT NULL UNIQUE,
    PhoneNumber VARCHAR(15) NOT NULL UNIQUE,
    Gender CHAR(1),
    ZIP CHAR(5) DEFAULT '34000',
    District NVARCHAR(15),
    City NVARCHAR(15) DEFAULT N'Ä°stanbul',
    CONSTRAINT CHK_MailAddress CHECK (MailAddress LIKE '%@%.%')
);

CREATE TABLE Student (
    PersonID SMALLINT PRIMARY KEY FOREIGN KEY REFERENCES Person(ID) ON DELETE CASCADE,
    BirthDate SMALLDATETIME NOT NULL,
    Age AS CAST((DATEDIFF(DAY, BirthDate, GETDATE()) / 365.25) AS INT),
    RegistrationDate SMALLDATETIME DEFAULT GETDATE(),
    Payment SMALLMONEY
);

CREATE TABLE Parent (
    FullName NVARCHAR(50) NOT NULL,
    PhoneNumber VARCHAR(15) NOT NULL,
    Occupation NVARCHAR(30),
    StudentID SMALLINT PRIMARY KEY FOREIGN KEY REFERENCES Student(PersonID) ON DELETE CASCADE
);

CREATE TABLE Instructor (
    PersonID SMALLINT PRIMARY KEY FOREIGN KEY REFERENCES Person(ID) ON DELETE CASCADE,
    Salary SMALLMONEY
);

CREATE TABLE InstructorAvailableTime (
    InstructorID SMALLINT FOREIGN KEY REFERENCES Instructor(PersonID) ON DELETE CASCADE,
    StartTime SMALLDATETIME,
    PRIMARY KEY (InstructorID, StartTime)
);

CREATE TABLE Course (
	ID SMALLINT PRIMARY KEY IDENTITY(1, 1),
	Name NVARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE CourseTopic (
	CourseID SMALLINT FOREIGN KEY REFERENCES Course(ID) ON DELETE CASCADE,
	Name NVARCHAR(50),
    PRIMARY KEY (CourseID, Name)
);

CREATE TABLE StudentCourse (
	StudentID SMALLINT FOREIGN KEY REFERENCES Student(PersonID) ON DELETE CASCADE,
	CourseID SMALLINT FOREIGN KEY REFERENCES Course(ID) ON DELETE CASCADE,
	MainGrade FLOAT,
    DateCompleted SMALLDATETIME,
	PRIMARY KEY (StudentID, CourseID),
    CONSTRAINT CHK_Grade CHECK (MainGrade>=0 AND MainGrade<=100)
);

CREATE TABLE InstructorCourse (
	InstructorID SMALLINT FOREIGN KEY REFERENCES Instructor(PersonID) ON DELETE CASCADE,
	CourseID SMALLINT FOREIGN KEY REFERENCES Course(ID) ON DELETE CASCADE,
	PRIMARY KEY (InstructorID, CourseID)
);

CREATE TABLE Meeting (
    ID SMALLINT PRIMARY KEY IDENTITY(1, 1),
    Date SMALLDATETIME NOT NULL,
    DurationInMins TINYINT, 
	CONSTRAINT CHK_DurationInMins CHECK (DurationInMins<=50),
	StudentID SMALLINT FOREIGN KEY REFERENCES Student(PersonID) NOT NULL,
	InstructorID SMALLINT FOREIGN KEY REFERENCES Instructor(PersonID) NOT NULL,
	CourseID SMALLINT FOREIGN KEY REFERENCES Course(ID) NOT NULL,
);

CREATE TABLE Exam (
    ID SMALLINT PRIMARY KEY IDENTITY(1, 1),
    NumOfQuestions TINYINT,
    CourseID SMALLINT FOREIGN KEY REFERENCES Course(ID) ON DELETE CASCADE NOT NULL
);

CREATE TABLE StudentExam (
    StudentID SMALLINT FOREIGN KEY REFERENCES Student(PersonID) ON DELETE CASCADE,
    ExamID SMALLINT FOREIGN KEY REFERENCES Exam(ID) ON DELETE CASCADE,
    Grade TINYINT NOT NULL,
    CorrectAnswers TINYINT,
    FalseAnswers TINYINT,
    PRIMARY KEY (StudentID, ExamID)
);